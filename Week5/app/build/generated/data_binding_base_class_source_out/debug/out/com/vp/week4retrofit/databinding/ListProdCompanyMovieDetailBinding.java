// Generated by view binder compiler. Do not edit!
package com.vp.week4retrofit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vp.week4retrofit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListProdCompanyMovieDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cvProdCompany;

  @NonNull
  public final ImageView ivProdCompany;

  @NonNull
  public final LinearLayout linProdCompany;

  private ListProdCompanyMovieDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cvProdCompany, @NonNull ImageView ivProdCompany,
      @NonNull LinearLayout linProdCompany) {
    this.rootView = rootView;
    this.cvProdCompany = cvProdCompany;
    this.ivProdCompany = ivProdCompany;
    this.linProdCompany = linProdCompany;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListProdCompanyMovieDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListProdCompanyMovieDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_prod_company_movie_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListProdCompanyMovieDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cv_prodCompany;
      CardView cvProdCompany = ViewBindings.findChildViewById(rootView, id);
      if (cvProdCompany == null) {
        break missingId;
      }

      id = R.id.iv_prodCompany;
      ImageView ivProdCompany = ViewBindings.findChildViewById(rootView, id);
      if (ivProdCompany == null) {
        break missingId;
      }

      id = R.id.lin_prodCompany;
      LinearLayout linProdCompany = ViewBindings.findChildViewById(rootView, id);
      if (linProdCompany == null) {
        break missingId;
      }

      return new ListProdCompanyMovieDetailBinding((ConstraintLayout) rootView, cvProdCompany,
          ivProdCompany, linProdCompany);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
